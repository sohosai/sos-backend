on: [push, pull_request]

name: CI

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: sos21-backend
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-build
  build-shell:
    name: Build shell
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: sos21-backend
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-build shell.nix -A inputDerivation
  build-script-shell:
    name: Build shell for scripts
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: sos21-backend
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-build script/shell.nix -A inputDerivation
  fmt:
    name: Rustfmt
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: sos21-backend
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-env -f ./nix/pkgs.nix -iA rustPlatform.rust.cargo
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    name: Clippy
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: sos21-backend
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-env -f ./nix/pkgs.nix -iA rustPlatform.rust.cargo
      - uses: actions-rs/clippy-check@v1
        env:
          # Prevent searching $HOME/.cargo/bin for subcommands (rust-lang/cargo#6507)
          CARGO_HOME: ./.cargo
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          args: -- -D warnings
  lint-api-schema:
    name: Lint OpenAPI schema
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - run: nix-env -f ./nix/pkgs.nix -iA nodejs
      - run: cd sos21-api-server/schema; npm install
      - run: cd sos21-api-server/schema; npm run lint
  nixpkgs-fmt:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: sos21-backend
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - run: nix-env -f ./nix/pkgs.nix -iA nixpkgs-fmt
      - run: nixpkgs-fmt --check $(find . -name '*.nix' ! -name 'Cargo.nix')
